name: Duplicate Release to Another Repo

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  duplicate-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Generate GitHub App Token
        id: get-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          installation_id: ${{ secrets.APP_INSTALLATION_ID }}
      
      - name: Install dependencies
        run: sudo apt-get install -y jq curl
        
      - name: Get latest release and download assets
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}
        run: |
          # Define repositories
          SOURCE_REPO="Dawascope-Technologies/Desktop_POS_Server"
          TARGET_REPO="Dawascope-Technologies/dw_builds"
          
          echo "Fetching latest release from $SOURCE_REPO..."
          
          # Fetch latest release info
          RELEASE=$(curl -sL \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$SOURCE_REPO/releases/latest")
          
          # Save release data
          echo "$RELEASE" > release_data.json
          
          # Get asset download details
          ASSET_URL=$(echo "$RELEASE" | jq -r '.assets[0].url')
          
          echo "Downloading asset using GitHub CLI..."
          # Use gh release download which handles authentication correctly
          gh release download --repo $SOURCE_REPO $(echo "$RELEASE" | jq -r '.tag_name') \
            --pattern "*.exe" \
            --dir ./downloads
          
          # Verify download
          ls -l ./downloads
          
          # Check downloaded file size
          EXPECTED_SIZE=$(echo "$RELEASE" | jq -r '.assets[0].size')
          ACTUAL_SIZE=$(stat -f %z ./downloads/*.exe 2>/dev/null || stat -c %s ./downloads/*.exe)
          echo "Expected size: $EXPECTED_SIZE"
          echo "Actual size: $ACTUAL_SIZE"
          
          if [ "$ACTUAL_SIZE" != "$EXPECTED_SIZE" ]; then
            echo "Size mismatch"
            exit 1
          fi
      
      - name: Create and upload to target release
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}
        run: |
          TARGET_REPO="Dawascope-Technologies/dw_builds"
          
          # Load release data
          RELEASE_DATA=$(cat release_data.json)
          RELEASE_TAG=$(echo "$RELEASE_DATA" | jq -r .tag_name)
          RELEASE_NAME=$(echo "$RELEASE_DATA" | jq -r .name)
          
          echo "Creating release in target repository..."
          
          # Create release using gh cli
          gh release create "$RELEASE_TAG" \
            --repo "$TARGET_REPO" \
            --title "$RELEASE_NAME" \
            --notes "Duplicated from source repository" \
            ./downloads/*.exe